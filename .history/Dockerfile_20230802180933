# Stage client buid

FROM node:latest as base

WORKDIR /app/frontend
COPY client/package*.json ./
COPY client/* ./
RUN NODE_ENV=development npm ci

RUN npm run build

# COPY client/ ./dist

FROM golang:1.19 as backend

# RUN mkdir /app

# ADD . /app

WORKDIR /app/backend
COPY backend-server/go.mod backend-server/go.sum ./
RUN go mod download
COPY backend-server ./
ARG credentials
ENV credentials=$credentials

# ADD $credentials /app/backend/credentials.json
# FROM alpine:latest
# RUN apk add --no-cache curl
# RUN curl -sSL https://nixpacks.com/install.sh


# FROM railwayapp/nixpacks:latest as nix
# WORKDIR /app/backend

RUN CGO_ENABLED=0 GOOS=linux go build -o main

FROM golang:1.19

WORKDIR /app

COPY --from=base /app/frontend/dist ./client/dist

COPY --from=backend /app/backend/main ./ 

ARG PORT

ENV PORT=$PORT

EXPOSE $PORT
CMD [ "./main" ]


# declare build args
# ARG credentials

# Set environment variables from build args

# ENV railway_creds=$credentials

# COPY $railway_creds /backend/firestore.json